// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250729114416_PrimeiraMigracao")]
    partial class PrimeiraMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("INT")
                        .HasColumnName("ANOLANCAMENTO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATACRIACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("PrecoBase")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("PRECOBASE");

                    b.HasKey("Id");

                    b.ToTable("JOGO", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATACRIACAO");

                    b.Property<int>("JogoId")
                        .HasColumnType("INT")
                        .HasColumnName("JOGOID");

                    b.Property<int?>("PromocaoId")
                        .HasColumnType("INT")
                        .HasColumnName("PROMOCAOID");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT")
                        .HasColumnName("USUARIOID");

                    b.Property<decimal>("VlDesconto")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VLDESCONTO");

                    b.Property<decimal>("VlPago")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VLPAGO");

                    b.Property<decimal>("VlPedido")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VLPEDIDO");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("PromocaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PEDIDO", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATACRIACAO");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATAVALIDADE");

                    b.Property<int>("Desconto")
                        .HasColumnType("INT")
                        .HasColumnName("DESCONTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("UQ_PROMOCAO_NOME");

                    b.ToTable("PROMOCAO", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATACRIACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("NIVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("SENHA");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UQ_USUARIO_EMAIL");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Pedido", b =>
                {
                    b.HasOne("Core.Entity.Jogo", "Jogo")
                        .WithMany("Pedidos")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PEDIDO_JOGO");

                    b.HasOne("Core.Entity.Promocao", "Promocao")
                        .WithMany("Pedidos")
                        .HasForeignKey("PromocaoId")
                        .HasConstraintName("FK_PEDIDO_PROMOCAO");

                    b.HasOne("Core.Entity.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PEDIDO_USUARIO");

                    b.Navigation("Jogo");

                    b.Navigation("Promocao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Core.Entity.Promocao", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Core.Entity.Usuario", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
